// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WorldqlFb.Messages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Message : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Message GetRootAsMessage(ByteBuffer _bb) { return GetRootAsMessage(_bb, new Message()); }
  public static Message GetRootAsMessage(ByteBuffer _bb, Message obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public WorldqlFb.Messages.Instruction Instruction { get { int o = __p.__offset(4); return o != 0 ? (WorldqlFb.Messages.Instruction)__p.bb.Get(o + __p.bb_pos) : WorldqlFb.Messages.Instruction.Heartbeat; } }
  public string Parameter { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParameterBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetParameterBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetParameterArray() { return __p.__vector_as_array<byte>(6); }
  public string SenderUuid { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSenderUuidBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetSenderUuidBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetSenderUuidArray() { return __p.__vector_as_array<byte>(8); }
  public string WorldName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWorldNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetWorldNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetWorldNameArray() { return __p.__vector_as_array<byte>(10); }
  public WorldqlFb.Messages.Replication Replication { get { int o = __p.__offset(12); return o != 0 ? (WorldqlFb.Messages.Replication)__p.bb.Get(o + __p.bb_pos) : WorldqlFb.Messages.Replication.ExceptSelf; } }
  public WorldqlFb.Messages.Record? Records(int j) { int o = __p.__offset(14); return o != 0 ? (WorldqlFb.Messages.Record?)(new WorldqlFb.Messages.Record()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int RecordsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WorldqlFb.Messages.Entity? Entities(int j) { int o = __p.__offset(16); return o != 0 ? (WorldqlFb.Messages.Entity?)(new WorldqlFb.Messages.Entity()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EntitiesLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public WorldqlFb.Messages.Vec3d? Position { get { int o = __p.__offset(18); return o != 0 ? (WorldqlFb.Messages.Vec3d?)(new WorldqlFb.Messages.Vec3d()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public byte Flex(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int FlexLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFlexBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetFlexBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetFlexArray() { return __p.__vector_as_array<byte>(20); }

  public static Offset<WorldqlFb.Messages.Message> CreateMessage(FlatBufferBuilder builder,
      WorldqlFb.Messages.Instruction instruction = WorldqlFb.Messages.Instruction.Heartbeat,
      StringOffset parameterOffset = default(StringOffset),
      StringOffset sender_uuidOffset = default(StringOffset),
      StringOffset world_nameOffset = default(StringOffset),
      WorldqlFb.Messages.Replication replication = WorldqlFb.Messages.Replication.ExceptSelf,
      VectorOffset recordsOffset = default(VectorOffset),
      VectorOffset entitiesOffset = default(VectorOffset),
      WorldqlFb.Messages.Vec3dT position = null,
      VectorOffset flexOffset = default(VectorOffset)) {
    builder.StartTable(9);
    Message.AddFlex(builder, flexOffset);
    Message.AddPosition(builder, WorldqlFb.Messages.Vec3d.Pack(builder, position));
    Message.AddEntities(builder, entitiesOffset);
    Message.AddRecords(builder, recordsOffset);
    Message.AddWorldName(builder, world_nameOffset);
    Message.AddSenderUuid(builder, sender_uuidOffset);
    Message.AddParameter(builder, parameterOffset);
    Message.AddReplication(builder, replication);
    Message.AddInstruction(builder, instruction);
    return Message.EndMessage(builder);
  }

  public static void StartMessage(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddInstruction(FlatBufferBuilder builder, WorldqlFb.Messages.Instruction instruction) { builder.AddByte(0, (byte)instruction, 0); }
  public static void AddParameter(FlatBufferBuilder builder, StringOffset parameterOffset) { builder.AddOffset(1, parameterOffset.Value, 0); }
  public static void AddSenderUuid(FlatBufferBuilder builder, StringOffset senderUuidOffset) { builder.AddOffset(2, senderUuidOffset.Value, 0); }
  public static void AddWorldName(FlatBufferBuilder builder, StringOffset worldNameOffset) { builder.AddOffset(3, worldNameOffset.Value, 0); }
  public static void AddReplication(FlatBufferBuilder builder, WorldqlFb.Messages.Replication replication) { builder.AddByte(4, (byte)replication, 0); }
  public static void AddRecords(FlatBufferBuilder builder, VectorOffset recordsOffset) { builder.AddOffset(5, recordsOffset.Value, 0); }
  public static VectorOffset CreateRecordsVector(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Record>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateRecordsVectorBlock(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Record>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRecordsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEntities(FlatBufferBuilder builder, VectorOffset entitiesOffset) { builder.AddOffset(6, entitiesOffset.Value, 0); }
  public static VectorOffset CreateEntitiesVector(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Entity>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEntitiesVectorBlock(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Entity>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartEntitiesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Vec3d> positionOffset) { builder.AddStruct(7, positionOffset.Value, 0); }
  public static void AddFlex(FlatBufferBuilder builder, VectorOffset flexOffset) { builder.AddOffset(8, flexOffset.Value, 0); }
  public static VectorOffset CreateFlexVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFlexVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartFlexVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<WorldqlFb.Messages.Message> EndMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<WorldqlFb.Messages.Message>(o);
  }
  public static void FinishMessageBuffer(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Message> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMessageBuffer(FlatBufferBuilder builder, Offset<WorldqlFb.Messages.Message> offset) { builder.FinishSizePrefixed(offset.Value); }
  public MessageT UnPack() {
    var _o = new MessageT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MessageT _o) {
    _o.Instruction = this.Instruction;
    _o.Parameter = this.Parameter;
    _o.SenderUuid = this.SenderUuid;
    _o.WorldName = this.WorldName;
    _o.Replication = this.Replication;
    _o.Records = new List<WorldqlFb.Messages.RecordT>();
    for (var _j = 0; _j < this.RecordsLength; ++_j) {_o.Records.Add(this.Records(_j).HasValue ? this.Records(_j).Value.UnPack() : null);}
    _o.Entities = new List<WorldqlFb.Messages.EntityT>();
    for (var _j = 0; _j < this.EntitiesLength; ++_j) {_o.Entities.Add(this.Entities(_j).HasValue ? this.Entities(_j).Value.UnPack() : null);}
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
    _o.Flex = new List<byte>();
    for (var _j = 0; _j < this.FlexLength; ++_j) {_o.Flex.Add(this.Flex(_j));}
  }
  public static Offset<WorldqlFb.Messages.Message> Pack(FlatBufferBuilder builder, MessageT _o) {
    if (_o == null) return default(Offset<WorldqlFb.Messages.Message>);
    var _parameter = _o.Parameter == null ? default(StringOffset) : builder.CreateString(_o.Parameter);
    var _sender_uuid = _o.SenderUuid == null ? default(StringOffset) : builder.CreateString(_o.SenderUuid);
    var _world_name = _o.WorldName == null ? default(StringOffset) : builder.CreateString(_o.WorldName);
    var _records = default(VectorOffset);
    if (_o.Records != null) {
      var __records = new Offset<WorldqlFb.Messages.Record>[_o.Records.Count];
      for (var _j = 0; _j < __records.Length; ++_j) { __records[_j] = WorldqlFb.Messages.Record.Pack(builder, _o.Records[_j]); }
      _records = CreateRecordsVector(builder, __records);
    }
    var _entities = default(VectorOffset);
    if (_o.Entities != null) {
      var __entities = new Offset<WorldqlFb.Messages.Entity>[_o.Entities.Count];
      for (var _j = 0; _j < __entities.Length; ++_j) { __entities[_j] = WorldqlFb.Messages.Entity.Pack(builder, _o.Entities[_j]); }
      _entities = CreateEntitiesVector(builder, __entities);
    }
    var _flex = default(VectorOffset);
    if (_o.Flex != null) {
      var __flex = _o.Flex.ToArray();
      _flex = CreateFlexVector(builder, __flex);
    }
    return CreateMessage(
      builder,
      _o.Instruction,
      _parameter,
      _sender_uuid,
      _world_name,
      _o.Replication,
      _records,
      _entities,
      _o.Position,
      _flex);
  }
}

public class MessageT
{
  public WorldqlFb.Messages.Instruction Instruction { get; set; }
  public string Parameter { get; set; }
  public string SenderUuid { get; set; }
  public string WorldName { get; set; }
  public WorldqlFb.Messages.Replication Replication { get; set; }
  public List<WorldqlFb.Messages.RecordT> Records { get; set; }
  public List<WorldqlFb.Messages.EntityT> Entities { get; set; }
  public WorldqlFb.Messages.Vec3dT Position { get; set; }
  public List<byte> Flex { get; set; }

  public MessageT() {
    this.Instruction = WorldqlFb.Messages.Instruction.Heartbeat;
    this.Parameter = null;
    this.SenderUuid = null;
    this.WorldName = null;
    this.Replication = WorldqlFb.Messages.Replication.ExceptSelf;
    this.Records = null;
    this.Entities = null;
    this.Position = new WorldqlFb.Messages.Vec3dT();
    this.Flex = null;
  }
  public static MessageT DeserializeFromBinary(byte[] fbBuffer) {
    return Message.GetRootAsMessage(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Message.FinishMessageBuffer(fbb, Message.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
