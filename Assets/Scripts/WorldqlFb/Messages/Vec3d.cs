// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace WorldqlFb.Messages
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Vec3d : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Vec3d __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double X { get { return __p.bb.GetDouble(__p.bb_pos + 0); } }
  public double Y { get { return __p.bb.GetDouble(__p.bb_pos + 8); } }
  public double Z { get { return __p.bb.GetDouble(__p.bb_pos + 16); } }

  public static Offset<WorldqlFb.Messages.Vec3d> CreateVec3d(FlatBufferBuilder builder, double X, double Y, double Z) {
    builder.Prep(8, 24);
    builder.PutDouble(Z);
    builder.PutDouble(Y);
    builder.PutDouble(X);
    return new Offset<WorldqlFb.Messages.Vec3d>(builder.Offset);
  }
  public Vec3dT UnPack() {
    var _o = new Vec3dT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Vec3dT _o) {
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
  }
  public static Offset<WorldqlFb.Messages.Vec3d> Pack(FlatBufferBuilder builder, Vec3dT _o) {
    if (_o == null) return default(Offset<WorldqlFb.Messages.Vec3d>);
    return CreateVec3d(
      builder,
      _o.X,
      _o.Y,
      _o.Z);
  }
}

public class Vec3dT
{
  public double X { get; set; }
  public double Y { get; set; }
  public double Z { get; set; }

  public Vec3dT() {
    this.X = 0.0;
    this.Y = 0.0;
    this.Z = 0.0;
  }
}


}
